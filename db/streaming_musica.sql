-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.artista
(
    id_artista serial NOT NULL,
    nome character varying(255) COLLATE pg_catalog."default" NOT NULL,
    data_nascimento date,
    CONSTRAINT artista_pkey PRIMARY KEY (id_artista)
);

CREATE TABLE IF NOT EXISTS public.artista_musica
(
    id_artista integer NOT NULL,
    id_musica integer NOT NULL,
    CONSTRAINT artista_musica_pkey PRIMARY KEY (id_artista, id_musica)
);

CREATE TABLE IF NOT EXISTS public.disco
(
    id_disco serial NOT NULL,
    titulo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    data_lancamento date,
    id_artista integer NOT NULL,
    CONSTRAINT disco_pkey PRIMARY KEY (id_disco)
);

CREATE TABLE IF NOT EXISTS public.disco_musica
(
    id_disco integer NOT NULL,
    id_musica integer NOT NULL,
    CONSTRAINT disco_musica_pkey PRIMARY KEY (id_disco, id_musica)
);

CREATE TABLE IF NOT EXISTS public.musica
(
    id_musica serial NOT NULL,
    titulo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    duracao integer,
    CONSTRAINT musica_pkey PRIMARY KEY (id_musica)
);

CREATE TABLE IF NOT EXISTS public.playlist
(
    id_playlist serial NOT NULL,
    titulo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_usuario integer NOT NULL,
    CONSTRAINT playlist_pkey PRIMARY KEY (id_playlist)
);

CREATE TABLE IF NOT EXISTS public.playlist_musica
(
    id_playlist integer NOT NULL,
    id_musica integer NOT NULL,
    CONSTRAINT playlist_musica_pkey PRIMARY KEY (id_playlist, id_musica)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario serial NOT NULL,
    nome character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    data_registro date,
    CONSTRAINT usuario_pkey PRIMARY KEY (id_usuario),
    CONSTRAINT usuario_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.artista
(
    id_artista integer NOT NULL DEFAULT nextval('artista_id_artista_seq'::regclass),
    nome character varying(255) COLLATE pg_catalog."default" NOT NULL,
    data_nascimento date,
    CONSTRAINT artista_pkey PRIMARY KEY (id_artista)
);

ALTER TABLE IF EXISTS public.artista_musica
    ADD CONSTRAINT artista_musica_id_artista_fkey FOREIGN KEY (id_artista)
    REFERENCES public.artista (id_artista) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.artista_musica
    ADD CONSTRAINT artista_musica_id_musica_fkey FOREIGN KEY (id_musica)
    REFERENCES public.musica (id_musica) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.disco
    ADD CONSTRAINT disco_id_artista_fkey FOREIGN KEY (id_artista)
    REFERENCES public.artista (id_artista) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.disco_musica
    ADD CONSTRAINT disco_musica_id_disco_fkey FOREIGN KEY (id_disco)
    REFERENCES public.disco (id_disco) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.disco_musica
    ADD CONSTRAINT disco_musica_id_musica_fkey FOREIGN KEY (id_musica)
    REFERENCES public.musica (id_musica) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.playlist
    ADD CONSTRAINT playlist_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.playlist_musica
    ADD CONSTRAINT playlist_musica_id_musica_fkey FOREIGN KEY (id_musica)
    REFERENCES public.musica (id_musica) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.playlist_musica
    ADD CONSTRAINT playlist_musica_id_playlist_fkey FOREIGN KEY (id_playlist)
    REFERENCES public.playlist (id_playlist) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;